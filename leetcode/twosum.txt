C

int* twoSum(int* nums, int numsSize, int target, int* returnSize){
    
    *returnSize=2;

    int *ret=(int*)malloc(2*sizeof(int)),i,j,temp;

    for(i=0;i<numsSize;i++){
        temp=target-nums[i];
        for(j=i+1;j<numsSize;j++){
            if(temp==nums[j]){
                ret[0]=i;
                ret[1]=j;
                return ret;
            }
        }
    }
    return ret;
}




#include <stdio.h>
#include <stdlib.h>
int* twoSum(int*,int,int);

int main()
{
    int arr[]={2,7,11,15};
    int* nums=arr;
    int numsSize=4;
    int target=9;
    
    
    
    printf("%d %d", twoSum(nums, numsSize, target)[0],twoSum(nums, numsSize, target)[1]);

    return 0;
}







int* twoSum(int* nums, int numsSize, int target) {

int *a = (int*)malloc(2*sizeof(int));

for(int i = 0;i<numsSize;i++) {

    for(int j = i-1;(j<numsSize && j != i);j++) {

        if(nums[i] + nums[j] == target) {

            a[0] = i;
            a[1] = j;
        }
    }
}
return a;
}


Python

def twoSum(self, nums: List[int], target: int) -> List[int]:
        # 暴力破解法
        # len()方法時間複雜度是O(1)
        n = len(nums)
        # 因為要返回的是索引，所以應該使用陣列的索引進行迴圈
        for i in range(n):
            for j in range(i + 1, n):
                if nums[i] + nums[j] == target:
                    return [i, j]