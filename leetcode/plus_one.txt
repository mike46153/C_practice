void arryprint(int *arry, int* size)//列印函式
{
	for (int i = 0; i < (*size); i++)
	{
		printf("%d ", arry[i]);
	}
	printf("\n");
}
int main()
{
	int arry1[] = { 1, 2, 4 };
	int arry2[] = { 1, 2, 9 };
	int arry3[] = { 9, 9, 9 };

	int *size1 = (int *)malloc(sizeof(int));
	int*rn1 = plusOne(arry1, 3, size1);
	arryprint(rn1, size1);

	int *size2 = (int *)malloc(sizeof(int));
	int*rn2 = plusOne(arry2, 3, size2);
	arryprint(rn2, size1);

	int *size3 = (int *)malloc(sizeof(int));
	int*rn3 = plusOne(arry3, 3, size3);
	arryprint(rn3, size3);
	
	system("pause");
	return 0;
}





int* plusOne(int* digits, int digitsSize, int* returnSize) {
	//clock_t start = 0;
	//clock_t finish = 0;   //計算程式執行的時間的函式
	//double  duration;
	int* result = (int*)malloc(sizeof(int)*(digitsSize + 1));
	int i;
	for (i = 0; i < digitsSize; i++)//判斷是否進位
	{
		if (digits[i] != 9)
			break;
	}
	if (i == digitsSize)//判斷是否要加長輸出陣列長度（輸入陣列全為9）
	{
		*returnSize = digitsSize + 1;
		result[0] = 1;
		for (int i = 1; i<digitsSize + 1; i++)
			result[i] = 0;
		return result;
	}

	i = digitsSize - 1;
	result[i] = digits[i] + 1;
	for (i; i>0; i--)
	{
		if (result[i] == 10)//判斷不是第一位為9的進位
		{
			result[i] = 0;
			result[i - 1] = digits[i - 1] + 1;
		}
		else
			result[i - 1] = digits[i - 1];
	}
	*returnSize = digitsSize;
	//finish = clock();
	//duration = (double)(finish - start) / CLOCKS_PER_SEC;
	//printf("%f \n", duration);
	return result;
}